name: Release

on:
  push:
    tags: ["v*"]

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python-version }}-${{ matrix.os-platform[1] }}
    runs-on: ${{ matrix.os-platform[0] }}
    env:
      CIBW_BUILD_FRONTEND: "build[uv]"
    strategy:
      fail-fast: false
      matrix:
        python-version: [39, 310, 311, 312, 313]
        os-platform:
          [
            [ubuntu-latest, manylinux_x86_64],
            [ubuntu-24.04-arm, manylinux_aarch64],
            [windows-latest, win_amd64],
            [macos-13, macosx_x86_64],
            [macos-14, macosx_arm64],
          ]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: "true"

      - name: Set up uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0

      - name: Build wheels
        uses: pypa/cibuildwheel@5f22145df44122af0f5a201f93cf0207171beca7 # v3.0.0
        env:
          CIBW_BUILD: cp${{ matrix.python-version }}-${{ matrix.os-platform[1] }}
          CIBW_TEST_SKIP: "*"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artifact-cp${{ matrix.python-version }}-${{ matrix.os-platform[1] }}
          path: ./wheelhouse/*.whl
          retention-days: 1

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"

      - name: Build sdist
        run: |
          python -m pip install build scikit-build-core
          python -m build --sdist --outdir dist

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          path: ./dist/*.tar.gz
          retention-days: 1

  upload_to_pypi:
    name: "Upload to PyPI"
    if: github.repository == 'Nixtla/coreforecast'
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: dist
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
